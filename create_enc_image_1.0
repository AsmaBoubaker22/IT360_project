# Create the image
from PIL import Image

# Replace "your_image_file.jpg" with the path to your image

# Get the dimensions (width and height) of the image
width, height = image.size

# Print the dimensions
print("Width:", width)
print("Height:", height)
from PIL import Image, ImageDraw

def create(hex_codes, image_size):
    # Create a new image with the specified size
    img = Image.new('RGB', image_size)

    # Create a pixel map
    pixels = img.load()

    # Iterate over each pixel in the image and set its color based on the hex codes
    for x in range(image_size[0]):
        for y in range(image_size[1]):
            # Calculate the index of the hex code based on the current pixel position
            index = (x * image_size[1] + y) % len(hex_codes)
            # Convert the hex code to RGB format
            rgb_color = tuple(int(hex_codes[index][i:i+2], 16) for i in (0, 2, 4))
            # Set the color of the current pixel
            pixels[x, y] = rgb_color

    return img

# Example list of hex codes
hex_codes = transposed_pixels

# Image size (width, height)
image_dimension = (width,height )

image_final = create(hex_codes, image_dimension)

# Save the image
image_final.save('enc_image.jpeg','JPEG')

# Display the image
image_final.show()

# Open a text file in write mode
with open("enc_key.txt", "w") as file:
     #Write the variable to the file
     file.write(transposition_key_str)

